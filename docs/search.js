window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "aioimmich", "modulename": "aioimmich", "kind": "module", "doc": "<p>Aioimmic library.</p>\n"}, {"fullname": "aioimmich.Immich", "modulename": "aioimmich", "qualname": "Immich", "kind": "class", "doc": "<p>Immich instance.</p>\n"}, {"fullname": "aioimmich.Immich.__init__", "modulename": "aioimmich", "qualname": "Immich.__init__", "kind": "function", "doc": "<p>Immich instace init.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">aiohttp_session</span><span class=\"p\">:</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span>,</span><span class=\"param\">\t<span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2283</span>,</span><span class=\"param\">\t<span class=\"n\">use_ssl</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">device_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;python&#39;</span></span>)</span>"}, {"fullname": "aioimmich.Immich.api", "modulename": "aioimmich", "qualname": "Immich.api", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.albums", "modulename": "aioimmich", "qualname": "Immich.albums", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.assets", "modulename": "aioimmich", "qualname": "Immich.assets", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.people", "modulename": "aioimmich", "qualname": "Immich.people", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.search", "modulename": "aioimmich", "qualname": "Immich.search", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.server", "modulename": "aioimmich", "qualname": "Immich.server", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.tags", "modulename": "aioimmich", "qualname": "Immich.tags", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.Immich.users", "modulename": "aioimmich", "qualname": "Immich.users", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.albums", "modulename": "aioimmich.albums", "kind": "module", "doc": "<p>aioimmich albums api.</p>\n"}, {"fullname": "aioimmich.albums.ImmichAlbums", "modulename": "aioimmich.albums", "qualname": "ImmichAlbums", "kind": "class", "doc": "<p>Immich albums api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.albums.ImmichAlbums.async_get_all_albums", "modulename": "aioimmich.albums", "qualname": "ImmichAlbums.async_get_all_albums", "kind": "function", "doc": "<p>Get all albums.</p>\n\n<p>Returns:\n    list of all albums as <code>list[ImmichAlbum]</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAlbum</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.albums.ImmichAlbums.async_get_album_info", "modulename": "aioimmich.albums", "qualname": "ImmichAlbums.async_get_album_info", "kind": "function", "doc": "<p>Get album information and its assets.</p>\n\n<p>Args:\n    album_id (str): id of the album to be fetched\n    without_assests (bool): whether to fetch the asstes for the album</p>\n\n<p>Returns:\n    album with assests (when <code>without_assests=False</code>) as <code>ImmichAlbum</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">album_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">without_assests</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAlbum</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.albums.ImmichAlbums.async_add_assets_to_album", "modulename": "aioimmich.albums", "qualname": "ImmichAlbums.async_add_assets_to_album", "kind": "function", "doc": "<p>Add given assets to the given album.</p>\n\n<p>Args:\n    album_id (str): id of the album to add the assets\n    asset_ids (list): list of asset ids to add to the album</p>\n\n<p>Returns:\n    result of adding as list of <code>ImmichAddAssetsToAlbumResponse</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">album_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">asset_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAddAssetsToAlbumResponse</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.albums.models", "modulename": "aioimmich.albums.models", "kind": "module", "doc": "<p>aioimmich albums models.</p>\n"}, {"fullname": "aioimmich.albums.models.AssetToAlbumError", "modulename": "aioimmich.albums.models", "qualname": "AssetToAlbumError", "kind": "class", "doc": "<p>Asset upload status.</p>\n", "bases": "enum.StrEnum"}, {"fullname": "aioimmich.albums.models.AssetToAlbumError.DUPLICATED", "modulename": "aioimmich.albums.models", "qualname": "AssetToAlbumError.DUPLICATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetToAlbumError.DUPLICATED: &#x27;duplicate&#x27;&gt;"}, {"fullname": "aioimmich.albums.models.AssetToAlbumError.NO_PERMISSION", "modulename": "aioimmich.albums.models", "qualname": "AssetToAlbumError.NO_PERMISSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetToAlbumError.NO_PERMISSION: &#x27;no_permission&#x27;&gt;"}, {"fullname": "aioimmich.albums.models.AssetToAlbumError.NOT_FOUND", "modulename": "aioimmich.albums.models", "qualname": "AssetToAlbumError.NOT_FOUND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetToAlbumError.NOT_FOUND: &#x27;not_found&#x27;&gt;"}, {"fullname": "aioimmich.albums.models.AssetToAlbumError.UNKNOWN", "modulename": "aioimmich.albums.models", "qualname": "AssetToAlbumError.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetToAlbumError.UNKNOWN: &#x27;unknown&#x27;&gt;"}, {"fullname": "aioimmich.albums.models.ImmichAlbum", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum", "kind": "class", "doc": "<p>Representation of an immich album.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.__init__", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">album_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">album_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">album_thumbnail_asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">album_users</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">asset_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">assets</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAsset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">created_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">has_shared_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_activity_enabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">owner_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">owner</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichUser</span>,</span><span class=\"param\">\t<span class=\"n\">shared</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">updated_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">end_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">last_modified_asset_timestamp</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">start_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.album_id", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.album_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.album_name", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.album_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.album_thumbnail_asset_id", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.album_thumbnail_asset_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.album_users", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.album_users", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.asset_count", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.asset_count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.assets", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.assets", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[aioimmich.assets.models.ImmichAsset]"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.created_at", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.created_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.has_shared_link", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.has_shared_link", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.is_activity_enabled", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.is_activity_enabled", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.owner_id", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.owner_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.owner", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.owner", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.users.models.ImmichUser"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.shared", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.shared", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.updated_at", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.updated_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.end_date", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.end_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.last_modified_asset_timestamp", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.last_modified_asset_timestamp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.order", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.start_date", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.start_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.to_dict", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.albums.models.ImmichAlbum.from_dict", "modulename": "aioimmich.albums.models", "qualname": "ImmichAlbum.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse", "kind": "class", "doc": "<p>Representation of an immich add assets to album response.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.__init__", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">success</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AssetToAlbumError</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.asset_id", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.asset_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.success", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.success", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.error", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.albums.models.AssetToAlbumError | None", "default_value": "None"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.to_dict", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.albums.models.ImmichAddAssetsToAlbumResponse.from_dict", "modulename": "aioimmich.albums.models", "qualname": "ImmichAddAssetsToAlbumResponse.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.api", "modulename": "aioimmich.api", "kind": "module", "doc": "<p>aioimmich api.</p>\n"}, {"fullname": "aioimmich.api.CacheEntry", "modulename": "aioimmich.api", "qualname": "CacheEntry", "kind": "class", "doc": "<p>Representation of response cache entry.</p>\n"}, {"fullname": "aioimmich.api.CacheEntry.__init__", "modulename": "aioimmich.api", "qualname": "CacheEntry.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">etag</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.api.CacheEntry.etag", "modulename": "aioimmich.api", "qualname": "CacheEntry.etag", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, {"fullname": "aioimmich.api.CacheEntry.result", "modulename": "aioimmich.api", "qualname": "CacheEntry.result", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict | list | None"}, {"fullname": "aioimmich.api.ImmichApi", "modulename": "aioimmich.api", "qualname": "ImmichApi", "kind": "class", "doc": "<p>immich api.</p>\n"}, {"fullname": "aioimmich.api.ImmichApi.__init__", "modulename": "aioimmich.api", "qualname": "ImmichApi.__init__", "kind": "function", "doc": "<p>Immich api init.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">aiohttp_session</span><span class=\"p\">:</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span>,</span><span class=\"param\">\t<span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">device_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2283</span>,</span><span class=\"param\">\t<span class=\"n\">use_ssl</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "aioimmich.api.ImmichApi.session", "modulename": "aioimmich.api", "qualname": "ImmichApi.session", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aiohttp.client.ClientSession"}, {"fullname": "aioimmich.api.ImmichApi.api_key", "modulename": "aioimmich.api", "qualname": "ImmichApi.api_key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.api.ImmichApi.base_url", "modulename": "aioimmich.api", "qualname": "ImmichApi.base_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.api.ImmichApi.cache", "modulename": "aioimmich.api", "qualname": "ImmichApi.cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, aioimmich.api.CacheEntry]"}, {"fullname": "aioimmich.api.ImmichApi.device_id", "modulename": "aioimmich.api", "qualname": "ImmichApi.device_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.api.ImmichApi.async_do_request", "modulename": "aioimmich.api", "qualname": "ImmichApi.async_do_request", "kind": "function", "doc": "<p>Perform the request and handle errors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">end_point</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">raw_data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;json&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">raw_response_content</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">StreamReader</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.api.ImmichSubApi", "modulename": "aioimmich.api", "qualname": "ImmichSubApi", "kind": "class", "doc": "<p>immich sub api.</p>\n"}, {"fullname": "aioimmich.api.ImmichSubApi.__init__", "modulename": "aioimmich.api", "qualname": "ImmichSubApi.__init__", "kind": "function", "doc": "<p>Immich sub api init.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ImmichApi</span></span>)</span>"}, {"fullname": "aioimmich.api.ImmichSubApi.api", "modulename": "aioimmich.api", "qualname": "ImmichSubApi.api", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "aioimmich.assets", "modulename": "aioimmich.assets", "kind": "module", "doc": "<p>aioimmich assets api.</p>\n"}, {"fullname": "aioimmich.assets.ImmichAssests", "modulename": "aioimmich.assets", "qualname": "ImmichAssests", "kind": "class", "doc": "<p>Immich assets api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.assets.ImmichAssests.async_view_asset", "modulename": "aioimmich.assets", "qualname": "ImmichAssests.async_view_asset", "kind": "function", "doc": "<p>Get an assets thumbnail.</p>\n\n<p>Args:\n    asset_id (str): id of the asset to be fetched\n    size (str): one of [<code>fullsize</code>, <code>preview</code>, <code>thumbnail</code>] size (default: <code>thumbnail</code>)</p>\n\n<p>Returns:\n    asset content as <code>bytes</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;thumbnail&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.assets.ImmichAssests.async_play_video_stream", "modulename": "aioimmich.assets", "qualname": "ImmichAssests.async_play_video_stream", "kind": "function", "doc": "<p>Get a video stream.</p>\n\n<p>Args:\n    asset_id (str): id of the video to be streamed</p>\n\n<p>Returns:\n    the video stream as <code>StreamReader</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">StreamReader</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.assets.ImmichAssests.async_upload_asset", "modulename": "aioimmich.assets", "qualname": "ImmichAssests.async_upload_asset", "kind": "function", "doc": "<p>Upload a file.</p>\n\n<p>Args:\n    file (str): path to the file to be uploaded</p>\n\n<p>Returns:\n    result of upload as <code>ImmichAssetUploadResponse</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAssetUploadResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.assets.models", "modulename": "aioimmich.assets.models", "kind": "module", "doc": "<p>aioimmich models.</p>\n"}, {"fullname": "aioimmich.assets.models.AssetType", "modulename": "aioimmich.assets.models", "qualname": "AssetType", "kind": "class", "doc": "<p>Asset type.</p>\n", "bases": "enum.StrEnum"}, {"fullname": "aioimmich.assets.models.AssetType.AUDIO", "modulename": "aioimmich.assets.models", "qualname": "AssetType.AUDIO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetType.AUDIO: &#x27;AUDIO&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.AssetType.IMAGE", "modulename": "aioimmich.assets.models", "qualname": "AssetType.IMAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetType.IMAGE: &#x27;IMAGE&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.AssetType.OTHER", "modulename": "aioimmich.assets.models", "qualname": "AssetType.OTHER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetType.OTHER: &#x27;OTHER&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.AssetType.VIDEO", "modulename": "aioimmich.assets.models", "qualname": "AssetType.VIDEO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AssetType.VIDEO: &#x27;VIDEO&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.UploadStatus", "modulename": "aioimmich.assets.models", "qualname": "UploadStatus", "kind": "class", "doc": "<p>Asset upload status.</p>\n", "bases": "enum.StrEnum"}, {"fullname": "aioimmich.assets.models.UploadStatus.CREATED", "modulename": "aioimmich.assets.models", "qualname": "UploadStatus.CREATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UploadStatus.CREATED: &#x27;created&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.UploadStatus.DUPLICATED", "modulename": "aioimmich.assets.models", "qualname": "UploadStatus.DUPLICATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UploadStatus.DUPLICATED: &#x27;duplicate&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.UploadStatus.REPLACED", "modulename": "aioimmich.assets.models", "qualname": "UploadStatus.REPLACED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UploadStatus.REPLACED: &#x27;replaced&#x27;&gt;"}, {"fullname": "aioimmich.assets.models.ExifInfo", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo", "kind": "class", "doc": "<p>Exif info.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.assets.models.ExifInfo.__init__", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">city</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">date_time_original</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exif_image_height</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exif_image_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exposure_time</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_size_in_byte</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">f_number</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">focal_length</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">iso</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">latitude</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lens_model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">longitude</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">make</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">modify_date</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">orientation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">projection_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rating</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">time_zone</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.assets.models.ExifInfo.city", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.city", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.country", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.country", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.date_time_original", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.date_time_original", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.description", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.exif_image_height", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.exif_image_height", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.exif_image_width", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.exif_image_width", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.exposure_time", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.exposure_time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.file_size_in_byte", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.file_size_in_byte", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.f_number", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.f_number", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.focal_length", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.focal_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.iso", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.iso", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.latitude", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.latitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.lens_model", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.lens_model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.longitude", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.longitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.make", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.make", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.model", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.modify_date", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.modify_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.orientation", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.orientation", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.projection_type", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.projection_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.rating", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.rating", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.state", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.state", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.time_zone", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.time_zone", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ExifInfo.to_dict", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.assets.models.ExifInfo.from_dict", "modulename": "aioimmich.assets.models", "qualname": "ExifInfo.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.assets.models.ImmichAsset", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset", "kind": "class", "doc": "<p>Representation of an immich asset.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.assets.models.ImmichAsset.__init__", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">asset_type</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AssetType</span>,</span><span class=\"param\">\t<span class=\"n\">checksum</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">device_asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">device_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file_created_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">file_modified_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">has_metadata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_archived</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_favorite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_offline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_trashed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">local_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">original_file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">original_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">owner_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">people</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">resized</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">thumbhash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">updated_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">duplicate_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exif_info</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ExifInfo</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">library_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">live_photo_video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">original_mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.assets.models.ImmichAsset.asset_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.asset_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.asset_type", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.asset_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.assets.models.AssetType"}, {"fullname": "aioimmich.assets.models.ImmichAsset.checksum", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.checksum", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.device_asset_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.device_asset_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.device_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.device_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.duration", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.file_created_at", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.file_created_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.assets.models.ImmichAsset.file_modified_at", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.file_modified_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.assets.models.ImmichAsset.has_metadata", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.has_metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.is_archived", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.is_archived", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.is_favorite", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.is_favorite", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.is_offline", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.is_offline", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.is_trashed", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.is_trashed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.local_datetime", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.local_datetime", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.assets.models.ImmichAsset.original_file_name", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.original_file_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.original_path", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.original_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.owner_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.owner_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.people", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.people", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list"}, {"fullname": "aioimmich.assets.models.ImmichAsset.resized", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.resized", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.assets.models.ImmichAsset.thumbhash", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.thumbhash", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAsset.updated_at", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.updated_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.assets.models.ImmichAsset.duplicate_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.duplicate_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.exif_info", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.exif_info", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.assets.models.ExifInfo | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.library_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.library_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.live_photo_video_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.live_photo_video_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.original_mime_type", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.original_mime_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.visibility", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.visibility", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.assets.models.ImmichAsset.to_dict", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.assets.models.ImmichAsset.from_dict", "modulename": "aioimmich.assets.models", "qualname": "ImmichAsset.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse", "kind": "class", "doc": "<p>Representation of an immich asset upload response.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse.__init__", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">asset_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">UploadStatus</span></span>)</span>"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse.asset_id", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse.asset_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse.status", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.assets.models.UploadStatus"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse.to_dict", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.assets.models.ImmichAssetUploadResponse.from_dict", "modulename": "aioimmich.assets.models", "qualname": "ImmichAssetUploadResponse.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.const", "modulename": "aioimmich.const", "kind": "module", "doc": "<p>aioimmich constants.</p>\n"}, {"fullname": "aioimmich.const.LOGGER", "modulename": "aioimmich.const", "qualname": "LOGGER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger aioimmich (WARNING)&gt;"}, {"fullname": "aioimmich.const.CONNECT_ERRORS", "modulename": "aioimmich.const", "qualname": "CONNECT_ERRORS", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&lt;class &#x27;aiohttp.client_exceptions.ClientError&#x27;&gt;, &lt;class &#x27;TimeoutError&#x27;&gt;, &lt;class &#x27;OSError&#x27;&gt;)"}, {"fullname": "aioimmich.exceptions", "modulename": "aioimmich.exceptions", "kind": "module", "doc": "<p>aioimmich exceptions.</p>\n"}, {"fullname": "aioimmich.exceptions.ImmichError", "modulename": "aioimmich.exceptions", "qualname": "ImmichError", "kind": "class", "doc": "<p>Base class for immich errors.</p>\n", "bases": "builtins.Exception"}, {"fullname": "aioimmich.exceptions.ImmichError.__init__", "modulename": "aioimmich.exceptions", "qualname": "ImmichError.__init__", "kind": "function", "doc": "<p>Initialize JSON RPC errors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, {"fullname": "aioimmich.exceptions.ImmichUnauthorizedError", "modulename": "aioimmich.exceptions", "qualname": "ImmichUnauthorizedError", "kind": "class", "doc": "<p>Unauthorized error.</p>\n", "bases": "ImmichError"}, {"fullname": "aioimmich.exceptions.ImmichForbiddenError", "modulename": "aioimmich.exceptions", "qualname": "ImmichForbiddenError", "kind": "class", "doc": "<p>Forbidden error.</p>\n", "bases": "ImmichError"}, {"fullname": "aioimmich.exceptions.ImmichNotFoundError", "modulename": "aioimmich.exceptions", "qualname": "ImmichNotFoundError", "kind": "class", "doc": "<p>Not found error.</p>\n", "bases": "ImmichError"}, {"fullname": "aioimmich.people", "modulename": "aioimmich.people", "kind": "module", "doc": "<p>aioimmich people api.</p>\n"}, {"fullname": "aioimmich.people.ImmichPeople", "modulename": "aioimmich.people", "qualname": "ImmichPeople", "kind": "class", "doc": "<p>Immich tags api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.people.ImmichPeople.async_get_all_people", "modulename": "aioimmich.people", "qualname": "ImmichPeople.async_get_all_people", "kind": "function", "doc": "<p>Get all people.</p>\n\n<p>Args:\n    page_size (int):  assets per page\n    max_pages (int):  maximun number of pages to return</p>\n\n<p>Returns:\n    all people as list of <code>ImmichPerson</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">with_unnamed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">max_pages</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">people</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichPerson</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.people.ImmichPeople.async_get_person_thumbnail", "modulename": "aioimmich.people", "qualname": "ImmichPeople.async_get_person_thumbnail", "kind": "function", "doc": "<p>Download thumbnail for a person.</p>\n\n<p>Args:\n    person_id (str): id of the person to fetch the thumbnail for</p>\n\n<p>Returns:\n    persons thumbnail as <code>bytes</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">person_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.people.models", "modulename": "aioimmich.people.models", "kind": "module", "doc": "<p>aioimmich people models.</p>\n"}, {"fullname": "aioimmich.people.models.ImmichPerson", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson", "kind": "class", "doc": "<p>Representation of an immich person.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.people.models.ImmichPerson.__init__", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">person_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">thumbnail_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">birth_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_favorite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">updated_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.people.models.ImmichPerson.person_id", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.person_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.people.models.ImmichPerson.is_hidden", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.is_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool | None"}, {"fullname": "aioimmich.people.models.ImmichPerson.name", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.people.models.ImmichPerson.thumbnail_path", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.thumbnail_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.people.models.ImmichPerson.birth_date", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.birth_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.people.models.ImmichPerson.color", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.people.models.ImmichPerson.is_favorite", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.is_favorite", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool | None", "default_value": "None"}, {"fullname": "aioimmich.people.models.ImmichPerson.updated_at", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.updated_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None", "default_value": "None"}, {"fullname": "aioimmich.people.models.ImmichPerson.to_dict", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.people.models.ImmichPerson.from_dict", "modulename": "aioimmich.people.models", "qualname": "ImmichPerson.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.search", "modulename": "aioimmich.search", "kind": "module", "doc": "<p>aioimmich search api.</p>\n"}, {"fullname": "aioimmich.search.ImmichSearch", "modulename": "aioimmich.search", "qualname": "ImmichSearch", "kind": "class", "doc": "<p>Immich search api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.search.ImmichSearch.async_get_all", "modulename": "aioimmich.search", "qualname": "ImmichSearch.async_get_all", "kind": "function", "doc": "<p>Get all assets.</p>\n\n<p>Args:\n    page_size (int): assets per page\n    max_pages (int): maximun number of pages to return</p>\n\n<p>Returns:\n    a list of <code>ImmichAsset</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">max_pages</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAsset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.search.ImmichSearch.async_get_all_by_tag_ids", "modulename": "aioimmich.search", "qualname": "ImmichSearch.async_get_all_by_tag_ids", "kind": "function", "doc": "<p>Get all assets for given tag ids.</p>\n\n<p>Args:\n    tag_ids (list[str]): filter to list of tagIds\n    page_size (int): assets per page\n    max_pages (int): maximun number of pages to return</p>\n\n<p>Returns:\n    a list of <code>ImmichAsset</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tag_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">max_pages</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAsset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.search.ImmichSearch.async_get_all_by_person_ids", "modulename": "aioimmich.search", "qualname": "ImmichSearch.async_get_all_by_person_ids", "kind": "function", "doc": "<p>Get all assets for given person ids.</p>\n\n<p>Args:\n    person_ids (list[str]): filter to list of tagIds\n    page_size (int): assets per page\n    max_pages (int): maximun number of pages to return</p>\n\n<p>Returns:\n    a list of <code>ImmichAsset</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">person_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">max_pages</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichAsset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.server", "modulename": "aioimmich.server", "kind": "module", "doc": "<p>aioimmich server api.</p>\n"}, {"fullname": "aioimmich.server.ImmichServer", "modulename": "aioimmich.server", "qualname": "ImmichServer", "kind": "class", "doc": "<p>Immich server api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.server.ImmichServer.async_get_about_info", "modulename": "aioimmich.server", "qualname": "ImmichServer.async_get_about_info", "kind": "function", "doc": "<p>Get server about info.</p>\n\n<p>Returns:\n    server about info as <code>ImmichServerAbout</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichServerAbout</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.server.ImmichServer.async_get_storage_info", "modulename": "aioimmich.server", "qualname": "ImmichServer.async_get_storage_info", "kind": "function", "doc": "<p>Get server storage info.</p>\n\n<p>Returns:\n    server storage info as <code>ImmichServerStorage</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichServerStorage</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.server.ImmichServer.async_get_server_statistics", "modulename": "aioimmich.server", "qualname": "ImmichServer.async_get_server_statistics", "kind": "function", "doc": "<p>Get server usage statistics.</p>\n\n<p>Returns:\n    server usage statistics as <code>ImmichServerStatistics</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichServerStatistics</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.server.ImmichServer.async_get_version_check", "modulename": "aioimmich.server", "qualname": "ImmichServer.async_get_version_check", "kind": "function", "doc": "<p>Get server version check result.</p>\n\n<p>Requires immich server v1.134.0</p>\n\n<p>Returns:\n    server version check result as <code>ImmichServerVersionCheck</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichServerVersionCheck</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.server.models", "modulename": "aioimmich.server.models", "kind": "module", "doc": "<p>aioimmich server models.</p>\n"}, {"fullname": "aioimmich.server.models.ImmichServerAbout", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout", "kind": "class", "doc": "<p>Representation of the immich server about information.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.__init__", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">licensed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">version_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">build_image_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">build_image</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">build_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">build</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exiftool</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffmpeg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">imagemagick</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">libvips</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nodejs</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">repository_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">repository</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">source_commit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">source_ref</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">source_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.licensed", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.licensed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.version_url", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.version_url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.version", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.build_image_url", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.build_image_url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.build_image", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.build_image", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.build_url", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.build_url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.build", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.build", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.exiftool", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.exiftool", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.ffmpeg", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.ffmpeg", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.imagemagick", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.imagemagick", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.libvips", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.libvips", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.nodejs", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.nodejs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.repository_url", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.repository_url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.repository", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.repository", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.source_commit", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.source_commit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.source_ref", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.source_ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.source_url", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.source_url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.to_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerAbout.from_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerAbout.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerStorage", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage", "kind": "class", "doc": "<p>Representation of the immich server storage information.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.__init__", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">disk_available_raw</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">disk_available</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">disk_size_raw</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">disk_size</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">disk_usage_percentage</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">disk_use_raw</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">disk_use</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_available_raw", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_available_raw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_available", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_available", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_size_raw", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_size_raw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_size", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_usage_percentage", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_usage_percentage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_use_raw", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_use_raw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.disk_use", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.disk_use", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.to_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerStorage.from_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStorage.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ByUserUsage", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage", "kind": "class", "doc": "<p>Usage by user.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.server.models.ByUserUsage.__init__", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">photos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">quota_size_in_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">usage</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">usage_photos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">usage_videos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">videos</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "aioimmich.server.models.ByUserUsage.photos", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.photos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ByUserUsage.quota_size_in_bytes", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.quota_size_in_bytes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None"}, {"fullname": "aioimmich.server.models.ByUserUsage.usage", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.usage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ByUserUsage.usage_photos", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.usage_photos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ByUserUsage.usage_videos", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.usage_videos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ByUserUsage.user_id", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.user_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ByUserUsage.user_name", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.user_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.server.models.ByUserUsage.videos", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.videos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ByUserUsage.to_dict", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ByUserUsage.from_dict", "modulename": "aioimmich.server.models", "qualname": "ByUserUsage.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics", "kind": "class", "doc": "<p>Representation of the immich server usage statistics.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.__init__", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">photos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">usage_by_user</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ByUserUsage</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">usage_photos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">usage_videos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">usage</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">videos</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.photos", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.photos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.usage_by_user", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.usage_by_user", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[aioimmich.server.models.ByUserUsage]"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.usage_photos", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.usage_photos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.usage_videos", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.usage_videos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.usage", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.usage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.videos", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.videos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.to_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerStatistics.from_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerStatistics.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck", "kind": "class", "doc": "<p>Representation of the immich server version check result.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck.__init__", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">checked_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">release_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck.checked_at", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck.checked_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck.release_version", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck.release_version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck.to_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.server.models.ImmichServerVersionCheck.from_dict", "modulename": "aioimmich.server.models", "qualname": "ImmichServerVersionCheck.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.tags", "modulename": "aioimmich.tags", "kind": "module", "doc": "<p>aioimmich tags api.</p>\n"}, {"fullname": "aioimmich.tags.ImmichTags", "modulename": "aioimmich.tags", "qualname": "ImmichTags", "kind": "class", "doc": "<p>Immich tags api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.tags.ImmichTags.async_get_all_tags", "modulename": "aioimmich.tags", "qualname": "ImmichTags.async_get_all_tags", "kind": "function", "doc": "<p>Get all tags.</p>\n\n<p>Returns:\n    all tags as list of <code>ImmichTag</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichTag</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.tags.models", "modulename": "aioimmich.tags.models", "kind": "module", "doc": "<p>aioimmich tags models.</p>\n"}, {"fullname": "aioimmich.tags.models.ImmichTag", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag", "kind": "class", "doc": "<p>Representation of an immich tag.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.tags.models.ImmichTag.__init__", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">created_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">updated_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.tags.models.ImmichTag.created_at", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.created_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.tags.models.ImmichTag.name", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.tags.models.ImmichTag.tag_id", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.tag_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.tags.models.ImmichTag.updated_at", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.updated_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.tags.models.ImmichTag.value", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.tags.models.ImmichTag.color", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.tags.models.ImmichTag.parent_id", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.parent_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "aioimmich.tags.models.ImmichTag.to_dict", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.tags.models.ImmichTag.from_dict", "modulename": "aioimmich.tags.models", "qualname": "ImmichTag.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.users", "modulename": "aioimmich.users", "kind": "module", "doc": "<p>aioimmich users api.</p>\n"}, {"fullname": "aioimmich.users.ImmichUsers", "modulename": "aioimmich.users", "qualname": "ImmichUsers", "kind": "class", "doc": "<p>Immich users api.</p>\n", "bases": "aioimmich.api.ImmichSubApi"}, {"fullname": "aioimmich.users.ImmichUsers.async_get_my_user", "modulename": "aioimmich.users", "qualname": "ImmichUsers.async_get_my_user", "kind": "function", "doc": "<p>Get my own user info.</p>\n\n<p>Returns:\n    my own user info as <code>ImmichUserObject</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImmichUserObject</span>:</span></span>", "funcdef": "async def"}, {"fullname": "aioimmich.users.models", "modulename": "aioimmich.users.models", "kind": "module", "doc": "<p>aioimmich server models.</p>\n"}, {"fullname": "aioimmich.users.models.AvatarColor", "modulename": "aioimmich.users.models", "qualname": "AvatarColor", "kind": "class", "doc": "<p>Avatar colors.</p>\n", "bases": "enum.StrEnum"}, {"fullname": "aioimmich.users.models.AvatarColor.AMBER", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.AMBER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.AMBER: &#x27;amber&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.BLUE", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.BLUE: &#x27;blue&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.GRAY", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.GRAY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.GRAY: &#x27;gray&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.GREEN", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.GREEN: &#x27;green&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.ORANGE", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.ORANGE: &#x27;orange&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.PINK", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.PINK", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.PINK: &#x27;pink&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.PRIMARY", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.PRIMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.PRIMARY: &#x27;primary&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.PURPEL", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.PURPEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.PURPEL: &#x27;purple&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.RED", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.RED: &#x27;red&#x27;&gt;"}, {"fullname": "aioimmich.users.models.AvatarColor.YELLOW", "modulename": "aioimmich.users.models", "qualname": "AvatarColor.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AvatarColor.YELLOW: &#x27;yellow&#x27;&gt;"}, {"fullname": "aioimmich.users.models.UserStatus", "modulename": "aioimmich.users.models", "qualname": "UserStatus", "kind": "class", "doc": "<p>User status.</p>\n", "bases": "enum.StrEnum"}, {"fullname": "aioimmich.users.models.UserStatus.ACTIVE", "modulename": "aioimmich.users.models", "qualname": "UserStatus.ACTIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserStatus.ACTIVE: &#x27;active&#x27;&gt;"}, {"fullname": "aioimmich.users.models.UserStatus.DELETED", "modulename": "aioimmich.users.models", "qualname": "UserStatus.DELETED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserStatus.DELETED: &#x27;deleted&#x27;&gt;"}, {"fullname": "aioimmich.users.models.UserStatus.REMOVING", "modulename": "aioimmich.users.models", "qualname": "UserStatus.REMOVING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserStatus.REMOVING: &#x27;removing&#x27;&gt;"}, {"fullname": "aioimmich.users.models.ImmichUser", "modulename": "aioimmich.users.models", "qualname": "ImmichUser", "kind": "class", "doc": "<p>Representation of an immich user.</p>\n", "bases": "mashumaro.mixins.json.DataClassJSONMixin"}, {"fullname": "aioimmich.users.models.ImmichUser.__init__", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">avatar_color</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AvatarColor</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">profile_changed_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">profile_image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "aioimmich.users.models.ImmichUser.avatar_color", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.avatar_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.users.models.AvatarColor"}, {"fullname": "aioimmich.users.models.ImmichUser.email", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.email", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUser.name", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUser.profile_changed_at", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.profile_changed_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.users.models.ImmichUser.profile_image_path", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.profile_image_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUser.user_id", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.user_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUser.to_dict", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.users.models.ImmichUser.from_dict", "modulename": "aioimmich.users.models", "qualname": "ImmichUser.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.users.models.ImmichUserObject", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject", "kind": "class", "doc": "<p>Representation of an immich user configuration object.</p>\n", "bases": "ImmichUser"}, {"fullname": "aioimmich.users.models.ImmichUserObject.__init__", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">avatar_color</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AvatarColor</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">profile_changed_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">profile_image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">created_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">is_admin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">oauth_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">should_change_password</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"n\">aioimmich</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">UserStatus</span>,</span><span class=\"param\">\t<span class=\"n\">storage_label</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">deleted_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">quota_size_in_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">quota_usage_in_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">updated_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aioimmich.users.models.ImmichUserObject.created_at", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.created_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "aioimmich.users.models.ImmichUserObject.is_admin", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.is_admin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.users.models.ImmichUserObject.oauth_id", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.oauth_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUserObject.should_change_password", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.should_change_password", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "aioimmich.users.models.ImmichUserObject.status", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aioimmich.users.models.UserStatus"}, {"fullname": "aioimmich.users.models.ImmichUserObject.storage_label", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.storage_label", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "aioimmich.users.models.ImmichUserObject.deleted_at", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.deleted_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None"}, {"fullname": "aioimmich.users.models.ImmichUserObject.quota_size_in_bytes", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.quota_size_in_bytes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None"}, {"fullname": "aioimmich.users.models.ImmichUserObject.quota_usage_in_bytes", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.quota_usage_in_bytes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int | None"}, {"fullname": "aioimmich.users.models.ImmichUserObject.updated_at", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.updated_at", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime | None"}, {"fullname": "aioimmich.users.models.ImmichUserObject.to_dict", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aioimmich.users.models.ImmichUserObject.from_dict", "modulename": "aioimmich.users.models", "qualname": "ImmichUserObject.from_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">dialect</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();
